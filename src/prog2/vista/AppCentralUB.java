/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prog2.vista;
import adaptador.Adaptador;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Javier Rivera Romeu
 */
public class AppCentralUB extends javax.swing.JFrame {

    /**
     * Creates new form AppCentralUB
     */
    
    private CentralUB central;
    private Adaptador adaptador; 
    
    public AppCentralUB(CentralUB central) {
    initComponents();
    this.central = central;
    this.adaptador = central.getAdaptador();
    //Es necesario que se vaya actualizando la informacion que se muestra a medida que se vuelve a la ventana principal. 
    // No se puede controlar con un evento. 
    actualizarTextoArea(); 
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        ReedResearchReactorPicture = new javax.swing.JLabel();
        BarraDelMenu = new javax.swing.JMenuBar();
        MenuGeneral = new javax.swing.JMenu();
        OpcionGestion = new javax.swing.JMenuItem();
        OpcionVisualizar = new javax.swing.JMenuItem();
        OpcionFinalizar = new javax.swing.JMenuItem();
        OpcionGuardar = new javax.swing.JMenuItem();
        OpcionCargar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());

        AreaTexto.setEditable(false);
        AreaTexto.setColumns(20);
        AreaTexto.setRows(5);
        jScrollPane1.setViewportView(AreaTexto);

        ReedResearchReactorPicture.setIcon(new javax.swing.ImageIcon("C:\\Users\\javie\\Desktop\\P3_RiveraRomeuJavierBarnesLastraHatuey\\P3_RiveraRomeuJavierBarnesLastraHatuey\\src\\prog2\\vista\\ReedConsoleReactor.jpg")); // NOI18N

        MenuGeneral.setText("Opciones.");
        MenuGeneral.setActionCommand("");

        OpcionGestion.setText("GestionComponentes");
        OpcionGestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionGestionActionPerformed(evt);
            }
        });
        MenuGeneral.add(OpcionGestion);

        OpcionVisualizar.setText("VisualizarInformacion");
        OpcionVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionVisualizarActionPerformed(evt);
            }
        });
        MenuGeneral.add(OpcionVisualizar);

        OpcionFinalizar.setText("FinalizarDia");
        OpcionFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionFinalizarActionPerformed(evt);
            }
        });
        MenuGeneral.add(OpcionFinalizar);

        OpcionGuardar.setText("GuardarDatos");
        OpcionGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionGuardarActionPerformed(evt);
            }
        });
        MenuGeneral.add(OpcionGuardar);

        OpcionCargar.setText("CargarDatos");
        OpcionCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionCargarActionPerformed(evt);
            }
        });
        MenuGeneral.add(OpcionCargar);

        BarraDelMenu.add(MenuGeneral);

        setJMenuBar(BarraDelMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(ReedResearchReactorPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(ReedResearchReactorPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 308, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void OpcionFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionFinalizarActionPerformed
    // Finalizar el día en la central y obtener la información
    String info = central.finalitzaDia();
    
    // Mostrar mensaje de día finalizado en una ventana emergente
    JOptionPane.showMessageDialog(this, info, "Día Finalizado", JOptionPane.INFORMATION_MESSAGE);

    // Actualizar el AreaTexto
    actualizarTextoArea();
    }//GEN-LAST:event_OpcionFinalizarActionPerformed

    private void OpcionGestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionGestionActionPerformed
        new GestionComponentes(this, true, central).setVisible(true);
    }//GEN-LAST:event_OpcionGestionActionPerformed

    private void OpcionVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionVisualizarActionPerformed
        new VisualizarInformacion(this, true, central).setVisible(true); 
    }//GEN-LAST:event_OpcionVisualizarActionPerformed

    private void OpcionGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionGuardarActionPerformed
    JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                adaptador.guardaDades(file.getAbsolutePath());
                JOptionPane.showMessageDialog(this, "Datos guardados correctamente.", "Guardar Datos", JOptionPane.INFORMATION_MESSAGE);
            } catch (CentralUBException e) {
                JOptionPane.showMessageDialog(this, "Error al guardar datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_OpcionGuardarActionPerformed

    private void OpcionCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionCargarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                Adaptador dadesCarregades = Adaptador.carregaDades(file.getAbsolutePath());
                adaptador = dadesCarregades;
                JOptionPane.showMessageDialog(this, "Datos cargados correctamente.", "Cargar Datos", JOptionPane.INFORMATION_MESSAGE);
            } catch (CentralUBException e) {
                JOptionPane.showMessageDialog(this, "Error al cargar datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_OpcionCargarActionPerformed
    // Método para actualizar el texto en el AreaTexto
    private void actualizarTextoArea() {
        // Obtener la información necesaria del adaptador y central
        String informacion = "";
        // Obtener la demanda de potencia de la instancia de CentralUB
        float demandaPotencia = central.getDemandaPotencia();
        // Obtener la información del adaptador
        informacion += "Nº de día: " + adaptador.obtenerNumeroDia() + "\n";
        informacion += "Demanda de potencia: " + demandaPotencia + "\n";
        informacion += "Ganancias acumuladas: " + adaptador.obtenerGananciasAcumuladas() + "\n";

        // Mostrar la información en el cuadro de texto
        AreaTexto.setText(informacion);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(AppCentralUB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    
    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
        // Instantiate the CentralUB object
        CentralUB central = new CentralUB();
        
        // Create the GUI frame and pass the central object to it
        new AppCentralUB(central).setVisible(true);
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaTexto;
    private javax.swing.JMenuBar BarraDelMenu;
    private javax.swing.JMenu MenuGeneral;
    private javax.swing.JMenuItem OpcionCargar;
    private javax.swing.JMenuItem OpcionFinalizar;
    private javax.swing.JMenuItem OpcionGestion;
    private javax.swing.JMenuItem OpcionGuardar;
    private javax.swing.JMenuItem OpcionVisualizar;
    private javax.swing.JLabel ReedResearchReactorPicture;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
